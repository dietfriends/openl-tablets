<ui:composition
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:oh="http://openl-tablets.sf.net/jsf/html">

    <ui:param name="canEditRulesDeployConfig"
              value="#{repositoryProjectRulesDeployConfig.canEditRulesDeploy}"/>

    <ui:param name="hasRulesDeploy" value="#{repositoryProjectRulesDeployConfig.rulesDeploy != null}"/>
    <h:outputStylesheet>
        #publishers {
        border-spacing: 0;
        }
        #publishers td:first-child {
        padding-left: 0;
        }
        #publishers label {
            padding-right: 15px;
        }
        #rules-deploy-configuration-form .label {
            width: 200px;
        }
    </h:outputStylesheet>

    <h:panelGroup rendered="#{!hasRulesDeploy}">
        <a4j:commandButton value="Create rules deploy configuration"
                           action="#{repositoryProjectRulesDeployConfig.createRulesDeploy}"
                           immediate="true"
                           onclick="return canOverwriteRevision();"
                           execute="rulesDeployConfigurationContent"
                           render="rulesDeployConfigurationContent"
                           rendered="#{canEditRulesDeployConfig}"/>
        <h:outputText value="Rules deploy configuration is absent" rendered="#{!canEditRulesDeployConfig}"/>
    </h:panelGroup>

  <h:panelGroup rendered="#{hasRulesDeploy}">
    <h:panelGrid columns="2" columnClasses="label," id="rules-deploy-configuration-form">
      <ui:param name="rulesDeploy" value="#{repositoryProjectRulesDeployConfig.rulesDeploy}" />

      <h:outputLabel for="#{prefix}provideRuntimeContext" value="Provide runtime context:"/>
        <h:selectBooleanCheckbox id="#{prefix}provideRuntimeContext" value="#{rulesDeploy.provideRuntimeContext}"
                                 disabled="#{!canEditRulesDeployConfig}"/>

      <h:outputLabel for="#{prefix}publishers" value="Create services:" rendered="#{repositoryProjectRulesDeployConfig.publishersSupported}"/>
      <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.publishersSupported}">
          <h:selectManyCheckbox id="#{prefix}publishers" value="#{rulesDeploy.publishers}"
                                disabled="#{!canEditRulesDeployConfig}" layout="lineDirection">
              <f:selectItems value="#{rulesDeploy.availablePublishers}" var="publisher" itemValue="#{publisher}"
                             itemLabel="#{msg['ws.deploy.publisher.'.concat(publisher)]}"/>
          </h:selectManyCheckbox>
        <h:message errorStyle="color:red; display:block" for="#{prefix}publishers" />
      </h:panelGroup>
      
      <h:outputLabel for="#{prefix}serviceName" value="Service name:"/>
      <h:panelGroup>
          <h:inputText id="#{prefix}serviceName" maxlength="100" size="40" value="#{rulesDeploy.serviceName}"
                       rendered="#{canEditRulesDeployConfig}"
                       validator="#{repositoryProjectRulesDeployConfig.validateServiceName}"/>
          <h:outputText value="#{rulesDeploy.serviceName}" rendered="#{!canEditRulesDeployConfig}"/>
          <h:message for="#{prefix}serviceName" styleClass="error" style="display: block" />
      </h:panelGroup>

      <h:outputLabel for="#{prefix}serviceClass" value="Service class:"/>
      <h:panelGroup>
          <h:inputText id="#{prefix}serviceClass" maxlength="100" size="40" value="#{rulesDeploy.serviceClass}"
                       rendered="#{canEditRulesDeployConfig}"
                       validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
          <h:outputText value="#{rulesDeploy.serviceClass}" rendered="#{!canEditRulesDeployConfig}"/>
          <h:message for="#{prefix}serviceClass" styleClass="error" style="display: block" />
      </h:panelGroup>
      
      <h:outputLabel for="#{prefix}rmiServiceClass" value="RMI Service class:" rendered="#{repositoryProjectRulesDeployConfig.rmiServiceClassSupported}"/>
      <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.rmiServiceClassSupported}">
          <h:inputText id="#{prefix}rmiServiceClass" maxlength="100" size="40" value="#{rulesDeploy.rmiServiceClass}"
                       rendered="#{canEditRulesDeployConfig}"
                       validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
          <h:outputText value="#{rulesDeploy.rmiServiceClass}" rendered="#{!canEditRulesDeployConfig}"/>
          <h:message for="#{prefix}rmiServiceClass" styleClass="error" style="display: block" />
      </h:panelGroup>

      <h:outputLabel for="#{prefix}version" value="Version:" rendered="#{repositoryProjectRulesDeployConfig.versionSupported}"/>
        <h:panelGroup id="#{prefix}version" style="white-space: nowrap;"
                      rendered="#{repositoryProjectRulesDeployConfig.versionSupported}">
            <oh:inputVersion value="#{rulesDeploy.version}" id="#{prefix}input-version" shortView="true"
                             rendered="#{canEditRulesDeployConfig}"/>
            <h:outputText value="#{rulesDeploy.version}" rendered="#{!canEditRulesDeployConfig}"/>
        </h:panelGroup>

      <h:outputLabel for="#{prefix}url" value="URL:"/>
        <h:panelGroup>
            <h:inputText id="#{prefix}url" maxlength="100" size="40" value="#{rulesDeploy.url}"
                         rendered="#{canEditRulesDeployConfig}"/>
            <h:outputText value="#{rulesDeploy.url}" rendered="#{!canEditRulesDeployConfig}"/>
        </h:panelGroup>

      <h:outputLabel for="#{prefix}interceptingTemplateClassName" value="Intercepting template class:" rendered="#{!repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}"/>
        <h:panelGroup rendered="#{!repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}">
            <h:inputText id="#{prefix}interceptingTemplateClassName" maxlength="100" size="40"
                         value="#{rulesDeploy.interceptingTemplateClassName}" rendered="#{canEditRulesDeployConfig}"
                         validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
            <h:outputText value="#{rulesDeploy.interceptingTemplateClassName}" rendered="#{!canEditRulesDeployConfig}"/>
            <h:message for="#{prefix}interceptingTemplateClassName" styleClass="error" style="display: block"/>
        </h:panelGroup>

      <h:outputLabel for="#{prefix}templateClassName" value="Template class:" rendered="#{repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}"/>
        <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.annotationTemplateClassNameSupported}">
            <h:inputText id="#{prefix}templateClassName" maxlength="100" size="40"
                         value="#{rulesDeploy.templateClassName}" rendered="#{canEditRulesDeployConfig}"
                         validator="#{repositoryProjectRulesDeployConfig.validateServiceClass}"/>
            <h:outputText value="#{rulesDeploy.templateClassName}" rendered="#{!canEditRulesDeployConfig}"/>
            <h:message for="#{prefix}templateClassName" styleClass="error" style="display: block"/>
        </h:panelGroup>

      <h:outputLabel for="#{prefix}groups" value="Service groups:" rendered="#{repositoryProjectRulesDeployConfig.groupsSupported}"/>
        <h:panelGroup rendered="#{repositoryProjectRulesDeployConfig.groupsSupported}">
            <h:inputText id="#{prefix}groups" maxlength="100" size="40" value="#{rulesDeploy.groups}"
                         rendered="#{canEditRulesDeployConfig}"/>
            <h:outputText value="#{rulesDeploy.groups}" rendered="#{!canEditRulesDeployConfig}"/>
        </h:panelGroup>

      <h:outputLabel for="#{prefix}configuration" value="Configuration (XML):"/>
        <h:panelGroup>
            <h:inputTextarea id="#{prefix}configuration" cols="30" rows="4" value="#{rulesDeploy.configuration}"
                             rendered="#{canEditRulesDeployConfig}" styleClass="code"/>
            <h:outputText value="#{rulesDeploy.configuration}" rendered="#{!canEditRulesDeployConfig}"/>
        </h:panelGroup>
    </h:panelGrid>

    <br />
    <br />
    <a4j:commandButton value="Save Configuration" action="#{repositoryProjectRulesDeployConfig.saveRulesDeploy}"
                       rendered="#{canEditRulesDeployConfig}"
                       execute="rulesDeployConfigurationContent"
                       render="projectTree nodeButtons propertiesContent elementsContent rulesDeployConfigurationContent"
                       onclick="return canOverwriteRevision();"
                       styleClass="save-deploy-configuration-button button-primary"/>
    <a4j:commandButton value="Delete Configuration" action="#{repositoryProjectRulesDeployConfig.deleteRulesDeploy}"
                       immediate="true"
                       rendered="#{artefact.project.openedForEditing and repositoryProjectRulesDeployConfig.canDeleteRulesDeploy}"
                       execute="rulesDeployConfigurationContent"
                       render="projectTree nodeButtons propertiesContent elementsContent rulesDeployConfigurationContent"
                       onclick="if (!canOverwriteRevision()) return false; if(!window.confirm('Are you sure you want to delete the rules deploy configuration?')) {return false;}"/>
      <script>
          $j(function () {

              if (#{!repositoryProjectRulesDeployConfig.created}) {
                  $j('.save-deploy-configuration-button').prop("disabled", true);
                  $j("#rules-deploy-configuration-form").areYouSure();
                  // Enable save button only if the form is dirty - using events.
                  $j("#rules-deploy-configuration-form").bind('dirty.areYouSure', function () {
                      $j('.save-deploy-configuration-button').prop("disabled", false);
                  });
                  $j("#rules-deploy-configuration-form").bind('clean.areYouSure', function () {
                      $j('.save-deploy-configuration-button').prop("disabled", true);
                  });
              }
          });
      </script>
  </h:panelGroup>

</ui:composition>
